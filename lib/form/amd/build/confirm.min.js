define("core_form/confirm",["exports","core/notification","core/modal_factory","core/modal_events","core/str","core/templates","core/loadingicon"],(function(_exports,_notification,_modal_factory,_modal_events,_str,_templates,_loadingicon){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Form confirmation module.
   *
   * @module     core_form/confirm
   * @copyright  2022 Matt Porritt <mattp@catalyst-au.net>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */let modalObj,submitId;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_notification=_interopRequireDefault(_notification),_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events),_templates=_interopRequireDefault(_templates);const spinner=(_loadingicon=_interopRequireDefault(_loadingicon)).default.getIcon(),formSubmit=event=>{if("cancel"===event.submitter.name)return;event.preventDefault();const form=event.target;let confirmNotices=[];form.querySelectorAll("[data-confirm]").forEach((element=>{if(!isConfirmableElement(element))return;const{value:value,dataset:{confirm:valueToMatch}}=element;if(value==valueToMatch)return;let noticeData={label:element.labels[0].textContent.trim(),value:value};void 0!==element.dataset.confirmdesc&&(noticeData.description=element.dataset.confirmdesc),confirmNotices.push(noticeData)})),confirmNotices.length?(async confirmNotices=>{const context={notices:confirmNotices};modalObj.setBody(spinner),modalObj.show();try{const object=await _templates.default.renderForPromise("core_form/modal_confirm",context);modalObj.setBody(object.html)}catch(error){_notification.default.exception(error)}})(confirmNotices):document.getElementById(submitId).submit()},isConfirmableElement=element=>"checkbox"===element.type&&element.checked!=Boolean(Number(element.dataset.confirm))||void 0!==element.value;_exports.init=formId=>{submitId=formId,(async()=>{try{const title=await(0,_str.get_string)("confirm","core_form");_modal_factory.default.create({type:_modal_factory.default.types.SAVE_CANCEL,title:title,body:spinner,large:!0}).done((modal=>{modalObj=modal;const root=modalObj.getRoot();modal.setButtonText("save",(0,_str.get_string)("confirm")),root.on(_modal_events.default.save,(()=>{document.getElementById(submitId).submit()}))}))}catch(error){_notification.default.exception(error)}})();document.getElementById(formId).addEventListener("submit",formSubmit)}}));

//# sourceMappingURL=confirm.min.js.map