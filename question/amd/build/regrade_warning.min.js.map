{"version":3,"file":"regrade_warning.min.js","sources":["../src/regrade_warning.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript that will notify teacher or editing user a question may need negrading.\n *\n * @module     core_question/regrade_warning\n * @copyright  2023 Catalyst IT Canada\n * @author     GHALY Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {saveCancelPromise} from 'core/notification';\nimport {get_strings as getStrings} from 'core/str';\nimport Templates from 'core/templates';\n\n/**\n * Initialises regrade warning\n */\nexport const init = () => {\n    const submitButton = document.querySelector('#id_submitbutton');\n    const updateButton = document.querySelector('#id_updatebutton');\n    submitButton.addEventListener('click', (e) => {\n        e.preventDefault();\n        displayWarning(e);\n    });\n    updateButton.addEventListener('click', (e) => {\n        e.preventDefault();\n        displayWarning(e);\n    });\n};\n\nconst displayWarning = async(e) => {\n    const strings = await getStrings([\n        {\n            key: 'savechanges',\n            component: 'core',\n        },\n        {\n            key: 'savechangesandcontinueediting',\n            component: 'question',\n        },\n        {\n            key: 'regradeanyway',\n            component: 'question',\n        },\n    ]);\n    const form = e.target.closest('form.mform');\n    const saveLabel = e.target.id === 'id_updatebutton' ? strings[1] : strings[0];\n    // Maintain continue edition feature.\n    if (e.target.id === 'id_updatebutton') {\n        const input = form.querySelector('input[name=\"updatebutton\"]');\n        input.setAttribute('value', 1);\n    }\n    try {\n        await saveCancelPromise(\n            strings[2],\n            Templates.render('core_question/regrade_warning', {}),\n            saveLabel\n        );\n        // Save pressed.\n        form.submit();\n    } catch {\n        // Cancel pressed.\n        return;\n    }\n};\n"],"names":["submitButton","document","querySelector","updateButton","addEventListener","e","preventDefault","displayWarning","async","strings","key","component","form","target","closest","saveLabel","id","setAttribute","Templates","render","submit"],"mappings":";;;;;;;;8JA+BoB,WACVA,aAAeC,SAASC,cAAc,oBACtCC,aAAeF,SAASC,cAAc,oBAC5CF,aAAaI,iBAAiB,SAAUC,IACpCA,EAAEC,iBACFC,eAAeF,MAEnBF,aAAaC,iBAAiB,SAAUC,IACpCA,EAAEC,iBACFC,eAAeF,aAIjBE,eAAiBC,MAAAA,UACbC,cAAgB,oBAAW,CAC7B,CACIC,IAAK,cACLC,UAAW,QAEf,CACID,IAAK,gCACLC,UAAW,YAEf,CACID,IAAK,gBACLC,UAAW,cAGbC,KAAOP,EAAEQ,OAAOC,QAAQ,cACxBC,UAA4B,oBAAhBV,EAAEQ,OAAOG,GAA2BP,QAAQ,GAAKA,QAAQ,MAEvD,oBAAhBJ,EAAEQ,OAAOG,GAA0B,CACrBJ,KAAKV,cAAc,8BAC3Be,aAAa,QAAS,aAGtB,mCACFR,QAAQ,GACRS,mBAAUC,OAAO,gCAAiC,IAClDJ,WAGJH,KAAKQ,SACP"}