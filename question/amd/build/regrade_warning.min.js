define("core_question/regrade_warning",["exports","core/notification","core/str","core/templates"],(function(_exports,_notification,_str,_templates){var obj;
/**
   * JavaScript that will notify teacher or editing user a question may need negrading.
   *
   * @module     core_question/regrade_warning
   * @copyright  2023 Catalyst IT Canada
   * @author     GHALY Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_templates=(obj=_templates)&&obj.__esModule?obj:{default:obj};_exports.init=()=>{const submitButton=document.querySelector("#id_submitbutton"),updateButton=document.querySelector("#id_updatebutton");submitButton.addEventListener("click",(e=>{e.preventDefault(),displayWarning(e)})),updateButton.addEventListener("click",(e=>{e.preventDefault(),displayWarning(e)}))};const displayWarning=async e=>{const strings=await(0,_str.get_strings)([{key:"savechanges",component:"core"},{key:"savechangesandcontinueediting",component:"question"},{key:"regradeanyway",component:"question"}]),form=e.target.closest("form.mform"),saveLabel="id_updatebutton"===e.target.id?strings[1]:strings[0];if("id_updatebutton"===e.target.id){form.querySelector('input[name="updatebutton"]').setAttribute("value",1)}try{await(0,_notification.saveCancelPromise)(strings[2],_templates.default.render("core_question/regrade_warning",{}),saveLabel),form.submit()}catch{return}}}));

//# sourceMappingURL=regrade_warning.min.js.map